package com.dragonchang.config.aspect;import com.alibaba.fastjson.JSON;import io.swagger.annotations.ApiOperation;import lombok.extern.slf4j.Slf4j;import org.apache.commons.lang3.StringUtils;import org.aspectj.lang.ProceedingJoinPoint;import org.aspectj.lang.annotation.Around;import org.aspectj.lang.annotation.Aspect;import org.aspectj.lang.annotation.Pointcut;import org.aspectj.lang.reflect.MethodSignature;import org.springframework.beans.factory.annotation.Value;import org.springframework.http.HttpMethod;import org.springframework.stereotype.Component;import org.springframework.web.context.request.RequestContextHolder;import org.springframework.web.context.request.ServletRequestAttributes;import javax.servlet.http.HttpServletRequest;import java.io.Serializable;@Aspect@Component@Slf4jpublic class ApiAspect {  @Value("${spring.application.name}")  private String applicationName;  @Pointcut("execution(public * com.dragonchang..*..web..*.*(..))")  public void restControllerlog() {  }  @Around("restControllerlog()")  public Object logBeforeAndAfter(final ProceedingJoinPoint joinPoint) throws Throwable{    ServletRequestAttributes attributes = (ServletRequestAttributes) RequestContextHolder        .getRequestAttributes();    HttpServletRequest request = attributes.getRequest();    String className = joinPoint.getTarget().getClass().getName();    String methodName = joinPoint.getSignature().getName();    StringBuilder whatBuilder = new StringBuilder();    whatBuilder.append(request.getMethod()).append(" ").append(request.getRequestURL().toString());    String queryString = request.getQueryString();    if(!StringUtils.isEmpty(queryString)){      whatBuilder.append("?").append(queryString);    }    if (HttpMethod.GET.toString().equals(request.getMethod())) {// get请求    } else {//其他请求      Object[] args=joinPoint.getArgs();//      String bodyString = StringUtils.join(args, " ");      StringBuilder params=new StringBuilder();      if (args != null && args.length > 0) {        for (int i = 0; i < args.length; i++) {          if (args[i] instanceof Serializable) {            params.append(args[i].toString()).append(",");          } else {            String param= JSON.toJSONString(args[i]);            if(StringUtils.isNotBlank(param)) {              params.append(param).append(",");            }          }        }      }      if(!StringUtils.isEmpty(params)){        whatBuilder.append(" -d ").append(params.toString());      }    }    String who = "anonymous";    String what = whatBuilder.toString();    /*    对象 （serivceName.package..class.method）     */    String obj = applicationName + "."+ className + "." + methodName;    ApiOperation apiOperation = ((MethodSignature)joinPoint.getSignature()).getMethod().getAnnotation(ApiOperation.class);    String apiOperationData = "";    if(null != apiOperation){      apiOperationData += apiOperation.value();      apiOperationData += "    ";      apiOperationData += apiOperation.notes();    }    /*    记录执行之前的请求的详细信息     */    /*    执行请求     */    Object result = null;    try {       result = joinPoint.proceed();    }catch (Exception e){      log.error(genLog(what,who,obj, StringUtils.isEmpty(apiOperationData)?"":apiOperationData,"request failed,"+e.getMessage()));      throw  e;    }    /*    记录执行之后返回的结果内容，最多显示4000个字符     */    String jsonResult = "null return value";    try{       jsonResult = JSON.toJSONString(result);      if(jsonResult.length() > 4000 ){          jsonResult = jsonResult.substring(0,4000 )+" ......";      }    }catch (Exception e){      log.error("Parse json object error: "+ e.getMessage());    }    log.info(genLog(what,who,obj, StringUtils.isEmpty(apiOperationData)?"":apiOperationData,jsonResult));    return result;  }  private String genLog(String what,String who,String obj,String operation,String responseData){    StringBuilder sb=new StringBuilder();    sb.append("(what: "+what+") ");    sb.append("(who: "+who+") ");    sb.append("(object: "+obj+") ");    if( ! StringUtils.isEmpty(operation)){      sb.append("(ApiOperation: "+operation+") ");    }    sb.append("(result: "+responseData+") ");    return sb.toString();  }}